(window.webpackJsonp=window.webpackJsonp||[]).push([[36],{304:function(t,s,a){"use strict";a.r(s);var n=a(13),v=Object(n.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h2",{attrs:{id:"tcp协议-如何保证页面文件能被完整送达浏览器"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#tcp协议-如何保证页面文件能被完整送达浏览器"}},[t._v("#")]),t._v(" TCP协议：如何保证页面文件能被完整送达浏览器？")]),t._v(" "),s("h3",{attrs:{id:"ip-把数据包送达目的主机"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#ip-把数据包送达目的主机"}},[t._v("#")]),t._v(" IP：把数据包送达目的主机")]),t._v(" "),s("p",[t._v("数据包要在互联网上进行传输，就要符合"),s("strong",[t._v("网际协议")]),t._v("（Internet Protocol，简称"),s("strong",[t._v("IP")]),t._v("）标准。互联网上不同的在线设备都有唯一的地址，地址只是一个数字，这和大部分家庭收件地址类似，你只需要知道一个家庭的具体地址，就可以往这个地址发送包裹，这样物流系统就能把物品送到目的地。")]),t._v(" "),s("p",[s("strong",[t._v("计算机的地址就称为 IP 地址，访问任何网站实际上只是你的计算机向另外一台计算机请求信息。")])]),t._v(" "),s("p",[t._v("如果要想把一个数据包从主机 A 发送给主机 B，那么在传输之前，数据包上会被附加上主机 B 的 IP 地址信息，这样在传输过程中才能正确寻址。额外地，数据包上还会附加上主机 A 本身的 IP 地址，有了这些信息主机 B 才可以回复信息给主机 A。这些附加的信息会被装进一个叫 IP 头的数据结构里。IP 头是 IP 数据包开头的信息，包含 IP 版本、源 IP 地址、目标 IP 地址、生存时间等信息。")]),t._v(" "),s("p",[t._v("为了方便理解，我先把网络简单分为三层结构，如下图：")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://marvin130-blog.oss-cn-chengdu.aliyuncs.com/js%E9%AB%98%E7%BA%A7-%E7%BD%91%E7%BB%9C%E5%8D%8F%E8%AE%AE&ajax01.png",alt:"js高级-网络协议&ajax01"}})]),t._v(" "),s("p",[t._v("下面我们一起来看下一个数据包从主机 A 到主机 B 的旅程：")]),t._v(" "),s("ul",[s("li",[t._v("上层将含有“极客时间”的数据包交给网络层；")]),t._v(" "),s("li",[t._v("网络层再将 IP 头附加到数据包上，组成新的 "),s("strong",[t._v("IP 数据包")]),t._v("，并交给底层；")]),t._v(" "),s("li",[t._v("底层通过物理网络将数据包传输给主机 B；")]),t._v(" "),s("li",[t._v("数据包被传输到主机 B 的网络层，在这里主机 B 拆开数据包的 IP 头信息，并将拆开来的数据部分交给上层；")]),t._v(" "),s("li",[t._v("最终，含有“极客时间”信息的数据包就到达了主机 B 的上层了。")])]),t._v(" "),s("h3",{attrs:{id:"udp-把数据包送达应用程序"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#udp-把数据包送达应用程序"}},[t._v("#")]),t._v(" UDP：把数据包送达应用程序")]),t._v(" "),s("p",[t._v("IP 是非常底层的协议，只负责把数据包传送到对方电脑，但是对方电脑并不知道把数据包交给哪个程序，是交给浏览器还是交给王者荣耀？因此，需要基于 IP 之上开发能和应用打交道的协议，最常见的是“"),s("strong",[t._v("用户数据包协议")]),t._v("（User Datagram Protocol）”，简称"),s("strong",[t._v("UDP")]),t._v("。")]),t._v(" "),s("p",[t._v("UDP 中一个最重要的信息是"),s("strong",[t._v("端口号")]),t._v("，端口号其实就是一个数字，每个想访问网络的程序都需要绑定一个端口号。通过端口号 UDP 就能把指定的数据包发送给指定的程序了，所以"),s("strong",[t._v("IP 通过 IP 地址信息把数据包发送给指定的电脑，而 UDP 通过端口号把数据包分发给正确的程序")]),t._v("。和 IP 头一样，端口号会被装进 UDP 头里面，UDP 头再和原始数据包合并组成新的 UDP 数据包。UDP 头中除了目的端口，还有源端口号等信息。")]),t._v(" "),s("p",[t._v("为了支持 UDP 协议，我把前面的三层结构扩充为四层结构，在网络层和上层之间增加了传输层，如下图所示：")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://marvin130-blog.oss-cn-chengdu.aliyuncs.com/js%E9%AB%98%E7%BA%A7-%E7%BD%91%E7%BB%9C%E5%8D%8F%E8%AE%AE&ajax04.png",alt:"js高级-网络协议&ajax04"}})]),t._v(" "),s("p",[t._v("在使用 UDP 发送数据时，有各种因素会导致数据包出错，虽然 UDP 可以校验数据是否正确，但是对于错误的数据包，UDP 并不提供重发机制，只是丢弃当前的包，而且 UDP 在发送之后也无法知道是否能达到目的地。")]),t._v(" "),s("p",[t._v("下面我们一起来看下一个数据包从主机 A 旅行到主机 B 的路线：")]),t._v(" "),s("ul",[s("li",[t._v("上层将含有“极客时间”的数据包交给传输层；")]),t._v(" "),s("li",[t._v("传输层会在数据包前面附加上"),s("strong",[t._v("UDP 头")]),t._v("，组成新的 UDP 数据包，再将新的 UDP 数据包交给网络层；")]),t._v(" "),s("li",[t._v("网络层再将 IP 头附加到数据包上，组成新的 IP 数据包，并交给底层；")]),t._v(" "),s("li",[t._v("数据包被传输到主机 B 的网络层，在这里主机 B 拆开 IP 头信息，并将拆开来的数据部分交给传输层；")]),t._v(" "),s("li",[t._v("在传输层，数据包中的 UDP 头会被拆开，"),s("strong",[t._v("并根据 UDP 中所提供的端口号，把数据部分交给上层的应用程序")]),t._v("；")]),t._v(" "),s("li",[t._v("最终，含有“极客时间”信息的数据包就旅行到了主机 B 上层应用程序这里。")])]),t._v(" "),s("p",[t._v("在使用 UDP 发送数据时，有各种因素会导致数据包出错，虽然 UDP 可以校验数据是否正确，但是对于错误的数据包，UDP 并不提供重发机制，只是丢弃当前的包，而且 UDP 在发送之后也无法知道是否能达到目的地。")]),t._v(" "),s("h3",{attrs:{id:"tcp-把数据完整地送达应用程序"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#tcp-把数据完整地送达应用程序"}},[t._v("#")]),t._v(" TCP：把数据完整地送达应用程序")]),t._v(" "),s("p",[t._v("对于浏览器请求，或者邮件这类要求数据传输可靠性（reliability）的应用，如果使用 UDP 来传输会存在"),s("strong",[t._v("两个问题")]),t._v("：")]),t._v(" "),s("ul",[s("li",[t._v("数据包在传输过程中容易丢失；")]),t._v(" "),s("li",[t._v("大文件会被拆分成很多小的数据包来传输，这些小的数据包会经过不同的路由，并在不同的时间到达接收端，而 UDP 协议并不知道如何组装这些数据包，从而把这些数据包还原成完整的文件。")])]),t._v(" "),s("p",[t._v("基于这两个问题，我们引入 TCP 了。"),s("strong",[t._v("TCP（Transmission Control Protocol，传输控制协议）是一种面向连接的、可靠的、基于字节流的传输层通信协议")]),t._v("。相对于 UDP，TCP 有下面两个特点:")]),t._v(" "),s("ul",[s("li",[t._v("对于数据包丢失的情况，TCP 提供重传机制；")]),t._v(" "),s("li",[t._v("TCP 引入了数据包排序机制，用来保证把乱序的数据包组合成一个完整的文件。")])]),t._v(" "),s("p",[t._v("和 UDP 头一样，TCP 头除了包含了目标端口和本机端口号外，还提供了用于排序的序列号，以便接收端通过序号来重排数据包。")]),t._v(" "),s("p",[t._v("下面看看 TCP 下的单个数据包的传输流程：")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://marvin130-blog.oss-cn-chengdu.aliyuncs.com/js%E9%AB%98%E7%BA%A7-%E7%BD%91%E7%BB%9C%E5%8D%8F%E8%AE%AE&ajax02.png",alt:"js高级-网络协议&ajax02"}})]),t._v(" "),s("p",[t._v("通过上图你应该可以了解一个数据包是如何通过 TCP 来传输的。TCP 单个数据包的传输流程和 UDP 流程差不多，不同的地方在于，通过 TCP 头的信息保证了一块大的数据传输的完整性。")]),t._v(" "),s("p",[t._v("下面我们再看下"),s("strong",[t._v("完整的 TCP 连接过程")]),t._v("，通过这个过程你可以明白 TCP 是如何保证重传机制和数据包的排序功能的。")]),t._v(" "),s("p",[t._v("从下图可以看出，一个完整的 TCP 连接的生命周期包括了“"),s("strong",[t._v("建立连接")]),t._v("”“"),s("strong",[t._v("传输数据")]),t._v("”和“"),s("strong",[t._v("断开连接")]),t._v("”三个阶段。")]),t._v(" "),s("h3",{attrs:{id:"什么是-tcp-连接的三次握手"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#什么是-tcp-连接的三次握手"}},[t._v("#")]),t._v(" 什么是 TCP 连接的三次握手")]),t._v(" "),s("p",[t._v("TCP 是因特网中的传输层协议，使用三次握手协议建立连接，完成三次握手，客户端与服 务器开始传送数据。")]),t._v(" "),s("p",[s("strong",[t._v("第一次握手")]),t._v("："),s("strong",[t._v("建立连接时，客户端发送 syn 包（syn=j）到服务器")]),t._v("，并进入 SYN_SENT 状态，等待服务器确认；SYN：同步序列编号（Synchronize Sequence Numbers）。")]),t._v(" "),s("p",[s("strong",[t._v("第二次握手")]),t._v("："),s("strong",[t._v("服务器收到 syn 包")]),t._v("，必须确认客户的 SYN（ack=j+1），同时自己也发送一个 SYN 包（syn=k），即 SYN+ACK 包，此时服务器进入 SYN_RECV 状态；")]),t._v(" "),s("p",[s("strong",[t._v("第三次握手")]),t._v("："),s("strong",[t._v("客户端收到服务器的 SYN+ACK 包")]),t._v("，向服务器发送确认包 ACK(ack=k+1），此 包发送完毕，客户端和服务器进入 ESTABLISHED（TCP 连接成功）状态，完成三次握手。")]),t._v(" "),s("h4",{attrs:{id:"为什么是三次握手"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#为什么是三次握手"}},[t._v("#")]),t._v(" "),s("strong",[t._v("为什么是三次握手")])]),t._v(" "),s("p",[t._v("为了防止已失效的连接请求报文段突然有送到了服务器，因而产生错误,假设两次握手时，客户发出的第一个请求连接报文段在某一网络节点长时间滞留，以致延误到连接释放后才 到达服务器。服务器收到失效的连接请求报文段后，认为是客户又发出一次新的连接请求。于是向客户发送确认报文段，同意建立连接，此时在假定两次握手的前提下，连接建立成 功。这样会导致服务器的资源白白浪费")]),t._v(" "),s("h4",{attrs:{id:"为什么是四次挥手"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#为什么是四次挥手"}},[t._v("#")]),t._v(" "),s("strong",[t._v("为什么是四次挥手")])]),t._v(" "),s("p",[t._v("TCP 协议是全双工通信，这意味着客户端和服务器端都可以向彼此发送数据，所以关闭连接 是双方都需要确认的共同行为，假设是三次挥手时，首先释放了客户到服务器方向的连接，此时 TCP 连接处于半关闭状态，这时客户不能向服务器发送数据，而服务器还是可以向客户发送数据。如果此时客户收到了服务器的确认报文段后，就立即发送一个确认报文段,这会导致服务器向客户还在发送数据时连接就被关闭。这样会导致客户没有完整收到服务器所发的报文段")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://marvin130-blog.oss-cn-chengdu.aliyuncs.com/js%E9%AB%98%E7%BA%A7-%E7%BD%91%E7%BB%9C%E5%8D%8F%E8%AE%AE&ajax03.png",alt:"js高级-网络协议&ajax03"}})]),t._v(" "),s("ul",[s("li",[s("strong",[t._v("首先，建立连接阶段")]),t._v("。这个阶段是通过“三次握手”来建立客户端和服务器之间的连接。TCP 提供面向连接的通信传输。"),s("strong",[t._v("面向连接")]),t._v("是指在数据通信开始之前先做好两端之间的准备工作。所谓"),s("strong",[t._v("三次握手")]),t._v("，是指在建立一个 TCP 连接时，客户端和服务器总共要发送三个数据包以确认连接的建立。")]),t._v(" "),s("li",[s("strong",[t._v("其次，传输数据阶段")]),t._v("。在该阶段，"),s("strong",[t._v("接收端需要对每个数据包进行确认操作")]),t._v("，也就是接收端在接收到数据包之后，需要发送确认数据包给发送端。所以当发送端发送了一个数据包之后，在规定时间内没有接收到接收端反馈的确认消息，则判断为数据包丢失，并触发发送端的重发机制。同样，一个大的文件在传输过程中会被拆分成很多小的数据包，这些数据包到达接收端后，接收端会按照 TCP 头中的序号为其排序，从而保证组成完整的数据。")]),t._v(" "),s("li",[s("strong",[t._v("最后，断开连接阶段")]),t._v("。数据传输完毕之后，就要终止连接了，涉及到最后一个阶段“四次挥手”来保证双方都能断开连接。")])]),t._v(" "),s("p",[t._v("到这里你应该就明白了，TCP 为了保证数据传输的可靠性，牺牲了数据包的传输速度，因为“三次握手”和“数据包校验机制”等把传输过程中的数据包的数量提高了一倍。")]),t._v(" "),s("h2",{attrs:{id:"互联网通讯协议"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#互联网通讯协议"}},[t._v("#")]),t._v(" 互联网通讯协议")]),t._v(" "),s("p",[t._v("互联网通讯协议不止一种，常见的协议有： 1. DNS域名系统； 2. FTP文件传输协议； 3. Telnet远程终端协议； 4. HTTP超文本传送协议（浏览器使用的就是http协议）； 5. SMTP电子邮件协议； 6. SSH 加密传输协议")]),t._v(" "),s("h3",{attrs:{id:"浏览器端发起-http-请求流程"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#浏览器端发起-http-请求流程"}},[t._v("#")]),t._v(" 浏览器端发起 HTTP 请求流程")]),t._v(" "),s("p",[t._v("首先，浏览器构建"),s("strong",[t._v("请求行")]),t._v("信息（如下所示），构建好后，浏览器准备发起网络请求。")]),t._v(" "),s("h4",{attrs:{id:"_1-构建请求"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-构建请求"}},[t._v("#")]),t._v(" 1. 构建请求")]),t._v(" "),s("p",[t._v("首先，浏览器构建"),s("strong",[t._v("请求行")]),t._v("信息（如下所示），构建好后，浏览器准备发起网络请求。")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("GET /index.html HTTP1.1\n")])])]),s("h4",{attrs:{id:"_2-查找缓存"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-查找缓存"}},[t._v("#")]),t._v(" 2. 查找缓存")]),t._v(" "),s("p",[t._v("在真正发起网络请求之前，浏览器会先在浏览器缓存中查询是否有要请求的文件。其中，"),s("strong",[t._v("浏览器缓存是一种在本地保存资源副本，以供下次请求时直接使用的技术")]),t._v("。")]),t._v(" "),s("p",[t._v("当浏览器发现请求的资源已经在浏览器缓存中存有副本，它会拦截请求，返回该资源的副本，并直接结束请求，而不会再去源服务器重新下载。这样做的好处有：")]),t._v(" "),s("ul",[s("li",[t._v("缓解服务器端压力，提升性能（获取资源的耗时更短了）；")]),t._v(" "),s("li",[t._v("对于网站来说，缓存是实现快速资源加载的重要组成部分。")])]),t._v(" "),s("p",[t._v("当然，如果缓存查找失败，就会进入网络请求过程了。")]),t._v(" "),s("h4",{attrs:{id:"_3-准备-ip-地址和端口"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-准备-ip-地址和端口"}},[t._v("#")]),t._v(" 3. 准备 IP 地址和端口")]),t._v(" "),s("p",[t._v("不过，先不急，在了解网络请求之前，我们需要先看看 HTTP 和 TCP 的关系。因为浏览器使用"),s("strong",[t._v("HTTP 协议作为应用层协议")]),t._v("，用来封装请求的文本信息；并使用"),s("strong",[t._v("TCP/IP 作传输层协议")]),t._v("将它发到网络上，所以在 HTTP 工作开始之前，浏览器需要通过 TCP 与服务器建立连接。也就是说"),s("strong",[t._v("HTTP 的内容是通过 TCP 的传输数据阶段来实现的")]),t._v("，你可以结合下图更好地理解这二者的关系。")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://marvin130-blog.oss-cn-chengdu.aliyuncs.com/js%E9%AB%98%E7%BA%A7-%E7%BD%91%E7%BB%9C%E5%8D%8F%E8%AE%AE&ajax05.png",alt:"js高级-网络协议&ajax05"}})]),t._v(" "),s("h4",{attrs:{id:"_4-等待-tcp-队列"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-等待-tcp-队列"}},[t._v("#")]),t._v(" 4.等待 TCP 队列")]),t._v(" "),s("p",[t._v("现在已经把端口和 IP 地址都准备好了，那么下一步是不是可以建立 TCP 连接了呢？")]),t._v(" "),s("p",[t._v("答案依然是“不行”。Chrome 有个机制，同一个域名同时最多只能建立 6 个 TCP 连接，如果在同一个域名下同时有 10 个请求发生，那么其中 4 个请求会进入排队等待状态，直至进行中的请求完成。")]),t._v(" "),s("p",[t._v("当然，如果当前请求数量少于 6，会直接进入下一步，建立 TCP 连接。")]),t._v(" "),s("h4",{attrs:{id:"_5-建立-tcp-连接"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_5-建立-tcp-连接"}},[t._v("#")]),t._v(" 5. 建立 TCP 连接")]),t._v(" "),s("p",[t._v("排队等待结束之后，终于可以快乐地和服务器握手了，在 HTTP 工作开始之前，浏览器通过 TCP 与服务器建立连接。")]),t._v(" "),s("h4",{attrs:{id:"_6-发送-http-请求"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_6-发送-http-请求"}},[t._v("#")]),t._v(" 6. 发送 HTTP 请求")]),t._v(" "),s("p",[t._v("一旦建立了 TCP 连接，浏览器就可以和服务器进行通信了。而 HTTP 中的数据正是在这个通信过程中传输的。")]),t._v(" "),s("p",[t._v("你可以结合下图来理解，浏览器是如何发送请求信息给服务器的。")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://marvin130-blog.oss-cn-chengdu.aliyuncs.com/image-20220724165528521.png",alt:"image-20220724165528521"}})]),t._v(" "),s("h4",{attrs:{id:"method-请求方式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#method-请求方式"}},[t._v("#")]),t._v(" method（请求方式）")]),t._v(" "),s("p",[t._v("常见请求方式：  get  post  delete")]),t._v(" "),s("p",[t._v("作用：以开门见山地方式告诉服务器这个请求的目的是什么")]),t._v(" "),s("h4",{attrs:{id:"url"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#url"}},[t._v("#")]),t._v(" URL")]),t._v(" "),s("p",[t._v("URL（UniformResourceLocator 译：统一资源定位符） l")]),t._v(" "),s("p",[t._v("URL的作用：用于标识互联网上每个资源的唯一存放位置")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://marvin130-blog.oss-cn-chengdu.aliyuncs.com/image-20220724171030182.png",alt:"image-20220724171030182"}})]),t._v(" "),s("h2",{attrs:{id:"ajax"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#ajax"}},[t._v("#")]),t._v(" ajax")]),t._v(" "),s("p",[t._v("下面代码是运用原生js发送的一个ajax同步请求。")]),t._v(" "),s("h3",{attrs:{id:"简单运用"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#简单运用"}},[t._v("#")]),t._v(" 简单运用")]),t._v(" "),s("p",[t._v("在网页中利用webAPI中的 XMLHttpRequest 这个构造函数发出的请求，就叫Ajax请求。")]),t._v(" "),s("p",[t._v("Ajax 的原理简单来说通过 XmlHttpRequest 对象来向服务器发异步请求，从服务器获得数据，然后用 JavaScript 来操作 DOM 而更新页面")]),t._v(" "),s("p",[t._v("Ajax请求的优势")]),t._v(" "),s("ol",[s("li",[t._v("自定义强，可以随意设置method、url、请求头、请求体， 而"),s("code",[t._v("<img><script>")]),t._v("等不支持自定义")]),t._v(" "),s("li",[t._v("不会刷新页面，而"),s("code",[t._v("<a>、<form>")]),t._v("会刷新页面")])]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 1. 通过new构造函数得到一个ajax请求的实例对象")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" xhr "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("XMLHttpRequest")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 2. 准备好这次请求的method和url")]),t._v("\n    xhr"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("open")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("method"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" url"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("async"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" user"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" password"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//method ：表示当前的请求方式，常见的有 GET 、 POST")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//url ：服务端地址")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//async ：布尔值，表示是否异步执行操作，默认为 true")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//user : 可选的用户名用于认证用途；默认为`null")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//password : 可选的密码用于认证用途，默认为`null")]),t._v("\n\n\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//结合下图可以看到，这是个人计算机向服务器发送的一个请求请求方式method：get请求，可以根据上图分析url中每个部分的意义")]),t._v("\n \t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//如果发送post请求就需要设置请求头中的请求体格式")]),t._v("\n   "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 例如xhr.setRequestHeader('Content-Type', 'application/x-www-form-urlencoded');")]),t._v("\n   "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ")]),t._v("\n    xhr"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("timeout "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1000")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 3s")]),t._v("\n\n    xhr"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("ontimeout")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("alert")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'您当前网络连接不稳定，请稍后再试'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//请求超时")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 3. 发射")]),t._v("\n    xhr"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("send")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n\txhr"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("onreadystatechange")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("e")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("xhr"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("readyState "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 整个请求过程完毕")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("xhr"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("status "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("200")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" xhr"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("status "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("300")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("xhr"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("responseText"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 服务端返回的结果")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("xhr"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("status "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("400")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"错误信息："')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" xhr"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("status"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("onreadystatechange 事件用于监听服务器端的通信状态，主要监听的属性为 XMLHttpRequest.readyState , 关于 XMLHttpRequest.readyState 属性有五个状态，如下表显示")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("值")]),t._v(" "),s("th",[t._v("状态")]),t._v(" "),s("th",[t._v("描述")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("0")]),t._v(" "),s("td",[t._v("UNSENT")]),t._v(" "),s("td",[t._v("XMLHttpRequest 对象已被创建，但尚未调用 open方法")])]),t._v(" "),s("tr",[s("td",[t._v("1")]),t._v(" "),s("td",[t._v("OPENED")]),t._v(" "),s("td",[t._v("open() 方法已经被调用。")])]),t._v(" "),s("tr",[s("td",[t._v("2")]),t._v(" "),s("td",[t._v("HEADERS_RECEIVED")]),t._v(" "),s("td",[t._v("send() 方法已经被调用，响应头也已经被接收")])]),t._v(" "),s("tr",[s("td",[t._v("3")]),t._v(" "),s("td",[t._v("LOADING")]),t._v(" "),s("td",[t._v("数据接收中，此时 response 属性中已经包含部分数据")])]),t._v(" "),s("tr",[s("td",[t._v("4")]),t._v(" "),s("td",[t._v("DONE Ajax")]),t._v(" "),s("td",[t._v("请求完成，这意味着数据传输已经彻底完成或失败")])])])]),t._v(" "),s("p",[t._v("只要 readyState 属性值一变化，就会触发一次 readystatechange 事件")]),t._v(" "),s("p",[t._v("请求行信息")]),t._v(" "),s("p",[t._v("method：GET")]),t._v(" "),s("p",[t._v("URL:'http://ajax-base-api-t.itheima.net/api/getbooks'")]),t._v(" "),s("p",[t._v("version 在请求行没有表示，一般都是HTTP//1.1")]),t._v(" "),s("p",[t._v("get请求方式是没有请求体的")]),t._v(" "),s("p",[t._v("响应行信息")]),t._v(" "),s("p",[t._v("version HTTP//1.1  状态码200(表示请求成功)")]),t._v(" "),s("p",[t._v("响应头中有个关键的键值对：Content-type：json。表示响应体的数据类型为json格式")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://marvin130-blog.oss-cn-chengdu.aliyuncs.com/image-20220724173641090.png",alt:"image-20220724173641090"}})]),t._v(" "),s("h2",{attrs:{id:"从输入-url-到页面展示-这中间发生了什么"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#从输入-url-到页面展示-这中间发生了什么"}},[t._v("#")]),t._v(" 从输入 URL 到页面展示，这中间发生了什么")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://marvin130-blog.oss-cn-chengdu.aliyuncs.com/js%E9%AB%98%E7%BA%A7-%E7%BD%91%E7%BB%9C%E5%8D%8F%E8%AE%AE&ajax06.png",alt:"js高级-网络协议&ajax06"}})]),t._v(" "),s("ul",[s("li",[t._v("首先，用户从浏览器进程里"),s("strong",[t._v("输入请求信息")]),t._v("；")]),t._v(" "),s("li",[t._v("然后，网络进程"),s("strong",[t._v("发起 URL 请求")]),t._v("；")]),t._v(" "),s("li",[t._v("服务器响应 URL 请求之后，浏览器进程就又要开始"),s("strong",[t._v("准备渲染进程")]),t._v("了；")]),t._v(" "),s("li",[t._v("渲染进程准备好之后，需要先向渲染进程提交页面数据，我们称之为"),s("strong",[t._v("提交文档")]),t._v("阶段；")]),t._v(" "),s("li",[t._v("渲染进程接收完文档信息之后，便开始"),s("strong",[t._v("解析页面和加载子资源")]),t._v("，完成页面的渲染。")])])])}),[],!1,null,null,null);s.default=v.exports}}]);